# Division code...
#
# DIV/MOD a b c: m(c) = abs(m(b)) / m(a), m(tc) = abs(m(b)) % m(a), a > 0
#
start:


ta; tb; tc; td; zr; negged;

b ta;
ta tb;

ta;
a ta;
ta tc;

# if (tb <= 0) { tb = -tb; }
zr tb negate;
zr zr noneg;
negate:
  tb zr; zr td; tb; td tb; zr;
  nr negged;
noneg:

c;

div:
  nr c;         # c++
  tc tb dend; # b -= a, if b <= 0 JMP 'dend'
  zr zr div;  # jump back to 'div', unconditionally
dend:

ta; tb ta; # ta = -tb;

td;
tb td;
td tc; 

td;
or ta;       # ta--
ta td fix;   # if (td-ta <= 0) jump to fix
tc tc nofix; # else jump to no fix
fix:
  or c;        # c--
nofix:

zr negged nego;
zr zr nonego;
nego: 
nonego:

# Output values and halt
c -1;
tc -1;
negged -1;
0 0 -1;

. ta:0 tb:0 tc:0 td:0 c:0 zr:0 nr:-1 or:1 negged:0
. a:128   b:1026
#. a:32768 b:-65537 
